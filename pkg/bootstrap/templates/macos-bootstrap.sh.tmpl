#!/bin/bash
# macOS Bootstrap Script for goup-util
#
# AUTO-GENERATED by 'goup-util self build'
# Do not edit manually - changes will be overwritten
#
# Usage:
#   curl -fsSL https://raw.githubusercontent.com/{{.Repo}}/main/scripts/macos-bootstrap.sh | bash

set -e

echo "============================================"
echo " goup-util macOS Bootstrap"
echo "============================================"
echo ""

# Detect architecture
ARCH=$(uname -m)
if [ "$ARCH" = "x86_64" ]; then
    ARCH="amd64"
elif [ "$ARCH" = "arm64" ]; then
    ARCH="arm64"
else
    echo "ERROR: Unsupported architecture: $ARCH"
    echo "Supported: {{.SupportedArchs}}"
    exit 1
fi

BINARY_NAME="goup-util-darwin-$ARCH"
echo "Detected platform: darwin-$ARCH"

# Check if Homebrew is installed
if ! command -v brew &> /dev/null; then
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# Install dependencies
echo "Installing dependencies..."
brew install git go go-task/tap/go-task

# Download goup-util
TMP_DIR=$(mktemp -d)
cd "$TMP_DIR"

echo "Fetching latest release..."
RELEASE_URL="https://api.github.com/repos/{{.Repo}}/releases/latest"
DOWNLOAD_URL=$(curl -fsSL "$RELEASE_URL" | grep -o '"browser_download_url": "[^"]*'"$BINARY_NAME"'"' | sed 's/"browser_download_url": "//' | tr -d '"')

if [ -z "$DOWNLOAD_URL" ]; then
    echo "ERROR: Binary not found for darwin-$ARCH"
    echo "Supported architectures: {{.SupportedArchs}}"
    exit 1
fi

echo "Downloading $BINARY_NAME..."
curl -fsSL -o goup-util "$DOWNLOAD_URL"
chmod +x goup-util

# Install
INSTALL_PATH="/usr/local/bin/goup-util"
if [ -w "/usr/local/bin" ]; then
    mv goup-util "$INSTALL_PATH"
else
    sudo mv goup-util "$INSTALL_PATH"
fi

# Remove quarantine
xattr -d com.apple.quarantine "$INSTALL_PATH" 2>/dev/null || true

# Cleanup
cd ~
rm -rf "$TMP_DIR"

echo ""
echo "âœ“ goup-util installed to: $INSTALL_PATH"
echo ""
echo "Next steps:"
echo "  goup-util --help"
echo "  goup-util self upgrade"
echo ""
